---
AWSTemplateFormatVersion: 2010-09-09
Description: 'v5.75: ONLY FOR DEMO, NOT A SUPPORTED DEPLOYMENT OPTION.
  This template deploys PostgreSQL on Docker for Deep Security Manager.'
Metadata:
  cfn-lint:
    config:
      ignore_checks: [W2001,W8001,W1011]
Parameters:
  AWSIKeyPairName:
    Description: Existing key pair to use for connecting to database instance
      Instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Select an existing EC2 Key Pair.
  DBIRDSInstanceSize:
    Default: db.m5.large
    Description: Trend Micro Deep Security Database instance class
    Type: String
    AllowedValues:
    - db.m5.large
    - db.m5.xlarge
    - db.m5.2xlarge
    - db.m5.4xlarge
    - db.m5.8xlarge
    - db.m6g.large
    - db.m6g.xlarge
    - db.m6g.2xlarge
    - db.m6g.4xlarge
    - db.m6g.8xlarge
    - db.r5.large
    - db.r5.xlarge
    - db.r5.2xlarge
    - db.r5.4xlarge
    - db.r5.8xlarge
    - db.r6g.large
    - db.r6g.xlarge
    - db.r6g.2xlarge
    - db.r6g.4xlarge
    - db.r6g.8xlarge
    ConstraintDescription: must select a valid database instance type.
  DBICAdminName:
    Default: dsadmin
    Description: Admin account username to be used for the database instance
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  DBICAdminPassword:
    NoEcho: true
    Description: Password to be used for the Oracle database admin account
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9!^*\-_+]*'
    ConstraintDescription: Can only contain alphanumeric characters or the following
      special characters !^*-_+ Min length 8, max length 41
  DBPName:
    Default: dsm
    Description: Name to be assigned to the database
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
  RDSSG:
    Type: AWS::EC2::SecurityGroup::Id
  DBISubnet:
    Type: String
Mappings:
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2017.09.1.20180307-x86_64-gp2
    ap-northeast-1:
      AMZNLINUXHVM: ami-a77c30c1
      InstanceType: m5.large
    ap-northeast-2:
      AMZNLINUXHVM: ami-5e1ab730
      InstanceType: m5.large
    ap-south-1:
      AMZNLINUXHVM: ami-7c87d913
      InstanceType: m5.large
    ap-southeast-1:
      AMZNLINUXHVM: ami-e2adf99e
      InstanceType: m5.large
    ap-southeast-2:
      AMZNLINUXHVM: ami-43874721
      InstanceType: m5.large
    ca-central-1:
      AMZNLINUXHVM: ami-5b55d23f
      InstanceType: m5.large
    eu-north-1:
      AMZNLINUXHVM: ami-8c169ef2
      InstanceType: m5.large
    eu-central-1:
      AMZNLINUXHVM: ami-ac442ac3
      InstanceType: m5.large
    eu-west-1:
      AMZNLINUXHVM: ami-3bfab942
      InstanceType: m5.large
    eu-west-2:
      AMZNLINUXHVM: ami-dff017b8
      InstanceType: m5.large
    sa-east-1:
      AMZNLINUXHVM: ami-5339733f
      InstanceType: m5.large
    us-east-1:
      AMZNLINUXHVM: ami-1853ac65
      InstanceType: m5.large
    us-east-2:
      AMZNLINUXHVM: ami-25615740
      InstanceType: m5.large
    us-gov-west-1:
      AMZNLINUXHVM: ami-ffa61d9e
      InstanceType: m5.large
    us-west-1:
      AMZNLINUXHVM: ami-bf5540df
      InstanceType: m5.large
    us-west-2:
      AMZNLINUXHVM: ami-d874e0a0
      InstanceType: m5.large
Resources:
  DSDatabase:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref AWSIKeyPairName
      InstanceType:
        !FindInMap
        - AWSAMIRegionMap
        - !Ref AWS::Region
        - InstanceType
      ImageId:
        !FindInMap
        - AWSAMIRegionMap
        - !Ref AWS::Region
        - AMZNLINUXHVM
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref DBISubnet
          AssociatePublicIpAddress: true
          GroupSet:
          - !Ref RDSSG
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 100
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe

          #Install Docker in the EC2 instance
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user

          docker pull postgres:14.6
          docker run -e POSTGRES_PASSWORD=${DBICAdminPassword} -e POSTGRES_USER=${DBICAdminName} -p 5432:5432 -e POSTGRES_DB=${DBPName} --restart always --name dsm-psql -d postgres:14.6
      Tags:
      - Key: Application
        Value: Deep Security Manager
      - Key: Name
        Value: Deep Security Database
Conditions:
  RegionIsUsGovCloud:
    !Equals
    - !Ref AWS::Region
    - us-gov-west-1
Outputs:
  DSDBEndpoint:
    Description: Endpoint to be passed to DSM installation properties file
    Value: !GetAtt DSDatabase.PrivateIp
  DSDBPort:
    Description: Port to be passed to DSM installation properties file
    Value: 5432
...
