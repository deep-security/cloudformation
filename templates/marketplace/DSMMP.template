AWSTemplateFormatVersion: 2010-09-09
Description: >-
  v5.3: Deploys Deep Security Manager to AWS. This template is designed to be
  nested in a stack, and requires several passed parameters to launch.
  **WARNING** This template creates Amazon EC2 instances and related resources.
  You will be billed for the AWS resources used if you create a stack from this
  template.
Parameters:
  AWSIKeyPairName:
    Description: >-
      Existing key pair to use for connecting to your Deep Security Manager
      Instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    MinLength: '1'
    MaxLength: '255'
    ConstraintDescription: Select an existing EC2 Key Pair.
  AWSIVPC:
    Description: Existing VPC to deploy Deep Security Manager
    Type: 'AWS::EC2::VPC::Id'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[-_a-zA-Z0-9]*'
  DSCAdminName:
    Default: MasterAdmin
    Description: >-
      The Deep Security Manager administrator account username for Web Console
      Access
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DSCAdminPassword:
    NoEcho: true
    Description: The Deep Security Manager administrator account password
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9!^*\-_+]*'
    ConstraintDescription: >-
      Can only contain alphanumeric characters or the following special
      characters !^*-_+ Min length 8, max length 41
  DSIPLicenseKey:
    Description: >-
      Deep Security License key including dashes (e.g.
      AP-E9RM-99WHE-B5UR5-BV8YB-HVYM8-HYYVG)
    Type: String
    MinLength: 37
    MaxLength: 37
    AllowedPattern: >-
      [A-Z0-9]{2}-[A-Z0-9]{4}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}-[A-Z0-9]{5}
    ConstraintDescription: Key can only contain ASCII characters.
    Default: XX-XXXX-XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
  DSIPHeartbeatPort:
    Description: >-
      The heartbeat port used by Deep Security Agents and appliances to
      communicate with the Deep Security Manager.
    Type: Number
    MinValue: 0
    MaxValue: 65535
    Default: '4120'
    ConstraintDescription: Must be a valid TCP port.
  DSIPGUIPort:
    Description: The Deep Security Manager application and GUI port.
    Type: Number
    MinValue: 0
    MaxValue: 65535
    Default: '4119'
    ConstraintDescription: Must be a valid TCP port.
  DSIPInstanceType:
    Description: Amazon EC2 instance type for the Deep Security Manager Node Instances
    Type: String
    Default: m3.large
    AllowedValues:
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - g2.2xlarge
  DBICAdminName:
    Default: dsadmin
    Description: Admin account username to be used for the database instance
    Type: String
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBICAdminPassword:
    NoEcho: true
    Description: Password to be used for the database admin account
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: '[a-zA-Z0-9!^*\-_+]*'
    ConstraintDescription: >-
      Can only contain alphanumeric characters or the following special
      characters !^*-_+ Min length 8, max length 41
  DBPName:
    Default: dsm
    Description: Name to be assigned to the database
    Type: String
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPRDSEndpoint:
    Default: RDS.FQDN.domain
    Description: FQDN or IP of RDS Endpoint
    Type: String
    MinLength: '1'
    MaxLength: '64'
  DSMSG:
    Type: 'AWS::EC2::SecurityGroup::Id'
  DBPEngine:
    Default: Embedded
    Type: String
    AllowedValues:
      - Embedded
      - Oracle
      - SQL
      - PostgreSQL
  DSISubnetID:
    Description: >-
      Existing Subnet for Deep Security Manager. Must be a public subnet
      contained the in VPC chosen above.
    Type: 'AWS::EC2::Subnet::Id'
    MinLength: '1'
    MaxLength: '255'
    AllowedPattern: '[-_a-zA-Z0-9]*'
    ConstraintDescription: Subnet ID must exist in the chosen VPC
  DSMPMNode:
    Description: >-
      Select whether this is an additional node to be added to an existing Deep
      Security Manager Infrastructure
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
  DSIPLicense:
    Description: Choose License Model. If choosing BYOL you may enter the license below
    Type: String
    AllowedValues:
      - PerHost
      - BYOL
  CreateEIP:
    Description: >-
      Allocate an EIP and associate it with this Deep Security Manager Instance.
      Recommend set to true unless deploying behind an ELB
    Type: String
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'True'
  DSIELB:
    Type: String
    Default: ''
  DSIELBFQDN:
    Type: String
    Default: ''
  DSM1CompleteWaitHandle:
    Type: String
    Default: ''
  DSELBPosture:
    Description: Use internal or internet-facing ELB
    Type: String
    AllowedValues:
      - Internet-facing
      - Internal
    Default: Internet-facing
  CfnUrlPrefix:
    Type: String
    Default: 'https://s3.amazonaws.com/trend-micro-quick-start/latest/'
  DSCLicenseType:
    Type: String
    Default: Enterprise
    AllowedValues:
      - Enterprise
      - Network
  DSProxyUrl:
    Type: String
    Default: ''
Mappings:
  DSMAMI:
    us-east-1:
      PerHost: ami-453d3353
      BYOL: ami-02414914
    us-east-2:
      PerHost: ami-34a78651
      BYOL: ami-b5b796d0
    us-west-1:
      PerHost: ami-c3032da3
      BYOL: ami-57e2cc37
    us-west-2:
      PerHost: ami-3b213d42
      BYOL: ami-2aabb753
    ca-central-1:
      PerHost: ami-1850ef7c
      BYOL: ami-4b50ef2f
    ap-south-1:
      PerHost: ami-75add41a
      BYOL: ami-8795ece8
    ap-northeast-2:
      PerHost: ami-e517c98b
      BYOL: ami-7d07d913
    ap-southeast-1:
      PerHost: ami-e2a93e81
      BYOL: ami-1f27b07c
    ap-southeast-2:
      PerHost: ami-2e95884d
      BYOL: ami-40aeb323
    ap-northeast-1:
      PerHost: ami-7b475d1c
      BYOL: ami-db9a80bc
    eu-central-1:
      PerHost: ami-8d0cafe2
      BYOL: ami-b0c466df
    eu-west-1:
      PerHost: ami-3e5ebc47
      BYOL: ami-ebd13c92
    eu-west-2:
      PerHost: ami-9e8492fa
      BYOL: ami-7a8d9b1e
    sa-east-1:
      PerHost: ami-1f275373
      BYOL: ami-3d057151
  DSMSIZE:
    us-east-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    us-east-2:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    us-west-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    us-west-2:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    ca-central-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    ap-south-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    ap-northeast-2:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    ap-southeast-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    ap-southeast-2:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    ap-northeast-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    eu-central-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    eu-west-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    eu-west-2:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
    sa-east-1:
      PerHost: m4.xlarge
      BYOL: m4.xlarge
  DSMDBMap:
    SQL:
      DbTypeString: Microsoft SQL Server
    Oracle:
      DbTypeString: Oracle
    Embedded:
      DbTypeString: Embedded
    PostgreSQL:
      DbTypeString: PostgreSQL
Resources:
  DSMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns: !If 
        - UsePerHost
        - - 'arn:aws:iam::aws:policy/AWSMarketplaceMeteringFullAccess'
        - !Ref 'AWS::NoValue'
      Path: /
      Policies:
        - !If 
          - AddToELB
          - PolicyName: DeepSecurityManagerInstancePolicy
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - 'ec2:DescribeLicenses'
                    - 'ec2:DescribeInstances'
                    - 'ec2:DescribeImages'
                    - 'ec2:DescribeRegions'
                    - 'ec2:DescribeVpcs'
                    - 'ec2:DescribeSubnets'
                    - 'ec2:DescribeTags'
                    - 'sts:AssumeRole'
                    - 'ec2:DescribeAvailabilityZones'
                    - 'ec2:DescribeSecurityGroups'
                    - 'iam:ListAccountAliases'
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - 'elasticloadbalancing:RegisterInstancesWithLoadBalancer'
                    - 'elasticloadbalancing:CreateLoadBalancerListeners'
                    - 'elasticloadbalancing:CreateLoadBalancerPolicy'
                    - 'elasticloadbalancing:SetLoadBalancerPoliciesOfListener'
                  Resource: !Join 
                    - ''
                    - - !If
                        - RegionIsUsGovWest1
                        - 'arn:aws-us-gov:elasticloadbalancing:'
                        - 'arn:aws:elasticloadbalancing:'
                      - !Ref 'AWS::Region'
                      - ':'
                      - !Ref 'AWS::AccountId'
                      - ':loadbalancer/'
                      - !Ref DSIELB
                - Effect: Allow
                  Action:
                    - 'iam:UploadServerCertificate'
                    - 'iam:GetServerCertificate'
                  Resource: !Join 
                    - ''
                    - - !If
                        - RegionIsUsGovWest1
                        - 'arn:aws-us-gov:iam::'
                        - 'arn:aws:iam::'
                      - !Ref 'AWS::AccountId'
                      - ':server-certificate/DeepSecurityElbCertificate-'
                      - !Ref 'AWS::StackName'
                - Effect: Allow
                  Action:
                    - 'elasticloadbalancing:DescribeLoadBalancers'
                  Resource: '*'
          - PolicyName: DeepSecurityManagerInstancePolicy
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - 'ec2:DescribeLicenses'
                    - 'ec2:DescribeImages'
                    - 'ec2:DescribeInstances'
                    - 'ec2:DescribeRegions'
                    - 'ec2:DescribeSubnets'
                    - 'ec2:DescribeTags'
                    - 'ec2:DescribeVpcs'
                    - 'sts:AssumeRole'
                    - 'ec2:DescribeAvailabilityZones'
                    - 'ec2:DescribeSecurityGroups'
                    - 'iam:ListAccountAliases'
                  Resource: '*'
  DSMProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref DSMRole
  DSM:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          default:
            - setup
            - prepDSMInstall
            - installDSM
            - addCloudAccount
            - fixManagerHostObject
          doSqlSetup:
            - sqlSetup
          fixManagerLbSettings:
            - fixManagerLoadBalancerSettings
          fixManagerLocalLbAddress:
            - fixManagerLocalLoadBalancerHostsFile
          fixManagerHostObject:
            - fixManagerHostObject
          addDsmNode:
            - setup
            - prepDSMInstall
            - installDSM
            - fixManagerHostObject
          setupLocalELB:
            - addToELB
            - fixManagerLocalLoadBalancerHostsFile
          setupGlobalELB:
            - fixManagerLoadBalancerSettings
        setup:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Join 
                - ''
                - - |
                    [main]
                  - stack=
                  - !Ref 'AWS::StackId'
                  - |+

                  - region=
                  - !Ref 'AWS::Region'
                  - |+

              mode: '000400'
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join 
                - ''
                - - |
                    [cfn-auto-reloader-hook]
                  - |
                    triggers=post.update
                  - |
                    path=Resources.DSM.Metadata.AWS::CloudFormation::Init
                  - 'action=/opt/aws/bin/cfn-init -v -c updateDSM --stack '
                  - !Ref 'AWS::StackId'
                  - ' --resource DSM1'
                  - ' --region '
                  - !Ref 'AWS::Region'
                  - |2
                     runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
        prepDSMInstall:
          files:
            /etc/cfn/dsmConfiguration.properties:
              content: !Join 
                - ''
                - - !If 
                    - AddAcAnswer
                    - !If 
                      - NetworkOnlyLicense
                      - !Join 
                        - ''
                        - - LicenseScreen.License.1=
                          - !Ref DSIPLicenseKey
                      - !Join 
                        - ''
                        - - LicenseScreen.License.-1=
                          - !Ref DSIPLicenseKey
                    - |+

                  - |+

                  - CredentialsScreen.Administrator.Username=
                  - !Ref DSCAdminName
                  - |+

                  - CredentialsScreen.Administrator.Password=
                  - !Ref DSCAdminPassword
                  - |+

                  - |
                    CredentialsScreen.UseStrongPasswords=False
                  - |
                    Dinstall4j.language=en
                  - DatabaseScreen.DatabaseType=
                  - !FindInMap 
                    - DSMDBMap
                    - !Ref DBPEngine
                    - DbTypeString
                  - |+

                  - DatabaseScreen.Hostname=
                  - !Ref DBPRDSEndpoint
                  - |+

                  - DatabaseScreen.DatabaseName=
                  - !Ref DBPName
                  - |+

                  - |
                    DatabaseScreen.Transport=TCP
                  - DatabaseScreen.Username=
                  - !Ref DBICAdminName
                  - |+

                  - DatabaseScreen.Password=
                  - !Ref DBICAdminPassword
                  - |+

                  - AddressAndPortsScreen.ManagerPort=
                  - !Ref DSIPGUIPort
                  - |+

                  - AddressAndPortsScreen.HeartbeatPort=
                  - !Ref DSIPHeartbeatPort
                  - |+

                  - !If 
                    - IsFirstNode
                    - |
                      AddressAndPortsScreen.NewNode=false
                    - |
                      AddressAndPortsScreen.NewNode=true
                      UpgradeVerificationScreen.Overwrite=False
                  - |
                    SecurityUpdateScreen.UpdateComponents=true
                  - |
                    SecurityUpdateScreen.UpdateSoftware=true
                  - |
                    SmartProtectionNetworkScreen.EnableFeedback=false
                  - |
                    SmartProtectionNetworkScreen.IndustryType=blank
                  - |
                    RelayScreen.Install=True
                  - |
                    RelayScreen.ProxyType=None
                  - |
                    RelayScreen.ProxyPort=None
                  - |
                    RelayScreen.Proxy=False
                  - |
                    RelayScreen.AntiMalware=True
                  - |
                    RelayScreen.ProxyAuthentication=False
                  - |
                    Override.Automation=True
              owner: root
              mode: '000600'
        installDSM:
          commands:
            0-sethostnameinprops:
              command: !Join 
                - ''
                - - 'echo '
                  - >-
                    "AddressAndPortsScreen.ManagerAddress=$(curl
                    http://169.254.169.254/latest/meta-data/local-ipv4/)" >>
                    /etc/cfn/dsmConfiguration.properties
              ignoreErrors: 'false'
            1-install-DSM:
              command: >-
                cd /opt/trend/packages/dsm/default/; sh
                /opt/trend/packages/dsm/default/ManagerAWS.sh -q -console
                -varfile /etc/cfn/dsmConfiguration.properties >>
                /tmp/dsmInstallLog
              ignoreErrors: 'false'
            6-install-xml_grep:
              command: yum -y install perl-XML-Twig
        addCloudAccount:
          files:
            /etc/cfn/set-aia-settings.sh:
              source: !Join 
                - ''
                - - !Ref CfnUrlPrefix
                  - scripts/set-aia-settings.sh
              owner: root
              mode: '000700'
            /etc/cfn/kill-mp-web-installer.sh:
              source: !Join 
                - ''
                - - !Ref CfnUrlPrefix
                  - scripts/kill-mp-web-installer.sh
              owner: root
              mode: '000700'
            /etc/cfn/add-aws-account-with-instance-role.sh:
              source: !Join 
                - ''
                - - !Ref CfnUrlPrefix
                  - scripts/add-aws-account-with-instance-role.sh
              owner: root
              mode: '000700'
          commands:
            5-check-service:
              command: !Join 
                - ''
                - - 'until curl -vk https://127.0.0.1:'
                  - !Ref DSIPGUIPort
                  - >-
                    /rest/status/manager/current/ping; do echo "manager not
                    started yet" >> /tmp/4-check-service; service dsm_s start >>
                    /tmp/4-check-service; sleep 30; done
            7-set-aia-settings:
              command: !Join 
                - ''
                - - '/etc/cfn/set-aia-settings.sh '
                  - !Ref DSCAdminName
                  - ' '
                  - !Ref DSCAdminPassword
                  - ' - '
                  - !Ref DSIPGUIPort
                  - ' >> /tmp/set-aia-settings.log'
            8-addCloudAccount:
              command: !Join 
                - ''
                - - '/etc/cfn/add-aws-account-with-instance-role.sh '
                  - !Ref DSCAdminName
                  - ' '
                  - !Ref DSCAdminPassword
                  - ' localhost '
                  - !Ref DSIPGUIPort
                  - ' '
                  - !Ref 'AWS::Region'
              ignoreErrors: 'False'
            10-killWebInstaller:
              command: /etc/cfn/kill-mp-web-installer.sh
        sqlSetup:
          commands:
            1-get-create-script:
              command: !Join 
                - ''
                - - 'cd /etc/cfn/rhel-scripts; curl -O '
                  - !Ref CfnUrlPrefix
                  - scripts/create-dsm-db.py; chmod 755 create-dsm-db.py
              ignoreErrors: 'false'
            2-create-db:
              command: !Join 
                - ''
                - - 'cd /etc/cfn/rhel-scripts; python create-dsm-db.py --user '
                  - !Ref DBICAdminName
                  - ' --pass '
                  - !Ref DBICAdminPassword
                  - ' --endpoint '
                  - !Ref DBPRDSEndpoint
                  - ' --dbname '
                  - !Ref DBPName
              ignoreErrors: 'false'
        addToELB:
          commands:
            0-add-instance-to-elb:
              command: !Join 
                - ''
                - - >-
                    aws elb register-instances-with-load-balancer
                    --load-balancer 
                  - !Ref DSIELB
                  - ' --instances $(curl http://169.254.169.254/latest/meta-data/instance-id/) --region '
                  - !Ref 'AWS::Region'
              ignoreErrors: 'false'
        fixManagerLoadBalancerSettings:
          files:
            /etc/cfn/create-console-listener.sh:
              source: !Join 
                - ''
                - - !Ref CfnUrlPrefix
                  - scripts/create-console-listener.sh
              owner: root
              mode: '000700'
            /etc/cfn/set-lb-settings.sh:
              source: !Join 
                - ''
                - - !Ref CfnUrlPrefix
                  - scripts/set-lb-settings.sh
              owner: root
              mode: '000700'
          commands:
            1-setup-elb-listener:
              command: !Join 
                - ''
                - - '/etc/cfn/create-console-listener.sh '
                  - !Ref DSIELB
                  - ' '
                  - !Ref DSIELBFQDN
                  - ' '
                  - !Ref DSIPGUIPort
                  - ' '
                  - !Ref 'AWS::StackName'
                  - ' '
                  - '1 '
                  - !Ref 'AWS::Region'
                  - ' >> /tmp/listener.log'
            4-set-load-balancer-settings:
              command: !Join 
                - ''
                - - '/etc/cfn/set-lb-settings.sh '
                  - !Ref DSCAdminName
                  - ' '
                  - !Ref DSCAdminPassword
                  - ' '
                  - !Ref DSIELBFQDN
                  - ' '
                  - !Ref DSIPGUIPort
                  - ' '
                  - !Ref DSIPHeartbeatPort
                  - ' >> /tmp/set-lb-settings.log'
        fixManagerLocalLoadBalancerHostsFile:
          commands:
            1-setHostsFileELB:
              command: !Join 
                - ''
                - - echo "
                  - '$(curl http://169.254.169.254/latest/meta-data/local-ipv4/)'
                  - ' '
                  - !Ref DSIELBFQDN
                  - '" >> /etc/hosts'
        fixManagerHostObject:
          files:
            /etc/cfn/reactivate-manager.sh:
              source: !Join 
                - ''
                - - !Ref CfnUrlPrefix
                  - scripts/reactivate-manager.sh
              owner: root
              mode: '000700'
          commands:
            1-reactivate-manager.sh:
              command: !Join 
                - ''
                - - >-
                    /etc/cfn/reactivate-manager.sh >>
                    /etc/cfn/reactivate-manager.log 
                  - !Ref DSCAdminName
                  - ' '
                  - !Ref DSCAdminPassword
                  - ' '
                  - !Ref DSIPGUIPort
    Properties:
      IamInstanceProfile: !Ref DSMProfile
      ImageId: !FindInMap 
        - DSMAMI
        - !Ref 'AWS::Region'
        - !Ref DSIPLicense
      InstanceType: !If 
        - PPUNotSelected
        - !Ref DSIPInstanceType
        - !FindInMap 
          - DSMSIZE
          - !Ref 'AWS::Region'
          - !Ref DSIPLicense
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId: !Ref DSISubnetID
          AssociatePublicIpAddress: !If 
            - InternetFacingELB
            - true
            - false
          GroupSet:
            - !Ref DSMSG
      Tags:
        - Key: Name
          Value: Deep Security Manager
      KeyName: !Ref AWSIKeyPairName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              # cloud-init
            - !If 
              - UseProxy
              - !Join 
                - ''
                - - !Sub 
                    - |
                      export HTTPS_PROXY="https://${proxyUrl}"
                    - proxyUrl: !Ref DSProxyUrl
                  - !Sub 
                    - |
                      export HTTP_PROXY="http://${proxyUrl}"
                    - proxyUrl: !Ref DSProxyUrl
                  - |
                    export NO_PROXY="169.254.169.254,localhost,127.0.0.1"
                  - !Sub
                    - |
                      echo -e "proxy=http://${proxyUrl}" >> /etc/yum.conf
                    - proxyUrl: !Ref DSProxyUrl
                  - |
                    curl -ko /opt/trend/packages/dsm/default/Agent-amzn1-10.0.0-2240.x86_64.zip https://files.trendmicro.com/products/deepsecurity/en/10.0/Agent-amzn1-10.0.0-2240.x86_64.zip
              - ''
            - '/opt/aws/bin/cfn-init -v '
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource DSM'
            - ' --region '
            - !Ref 'AWS::Region'
            - !If 
              - SQLplusELB
              - ' -c doSqlSetup,default,setupLocalELB,setupGlobalELB'
              - !If 
                - DoSQLSetup
                - ' -c doSqlSetup,default'
                - !If 
                  - IsFirstNodePlusELB
                  - ' -c default,setupLocalELB,setupGlobalELB'
                  - ''
            - !If 
              - AddNodePlusELB
              - ' -c fixManagerLocalLbAddress,addDsmNode,setupLocalELB'
              - !If 
                - IsFirstNode
                - ''
                - ' -c addDsmNode'
            - !If 
              - UseProxy
              - !Sub 
                - ' --https-proxy https://${proxyUrl}'
                - proxyUrl: !Ref DSProxyUrl
              - ''
            - |+

            - !If 
              - WaitNotProvided
              - /opt/aws/bin/cfn-signal -e $?  -r "Complete" ''
              - !Join 
                - ''
                - - >-
                    /opt/aws/bin/cfn-signal -e $? -r "DSM Node configuration
                    complete" 
                  - !Base64 
                    Ref: DSM1CompleteWaitHandle
            - !If 
              - UseProxy
              - !Sub 
                - ' --https-proxy https://${proxyUrl}'
                - proxyUrl: !Ref DSProxyUrl
              - ''
            - |+

Conditions:
  DBTypeIsOracle: !Equals 
    - !Ref DBPEngine
    - Oracle
  DBTypeIsSQL: !Equals 
    - !Ref DBPEngine
    - SQL
  DBTypeIsEmbedded: !Equals 
    - !Ref DBPEngine
    - Embedded
  DBTypeIsPostgreSQL: !Equals 
    - !Ref DBPEngine
    - PostgreSQL
  IsFirstNode: !Equals 
    - !Ref DSMPMNode
    - 'No'
  DoSQLSetup: !And 
    - !Condition DBTypeIsSQL
    - !Condition IsFirstNode
  UseBYOL: !Equals 
    - !Ref DSIPLicense
    - BYOL
  UsePerHost: !Equals 
    - !Ref DSIPLicense
    - PerHost
  PPUNotSelected: !Or 
    - !Condition UsePerHost
    - !Condition UseBYOL
  AddToELB: !Not 
    - !Equals 
      - !Ref DSIELB
      - ''
  WaitNotProvided: !Equals 
    - DSM1CompleteWaitHandle
    - ''
  SQLplusELB: !And 
    - !Condition AddToELB
    - !Condition DoSQLSetup
  AddNodePlusELB: !And 
    - !Not 
      - !Condition IsFirstNode
    - !Condition AddToELB
  KeyProvided: !Not 
    - !Equals 
      - !Ref DSIPLicenseKey
      - XX-XXXX-XXXXX-XXXXX-XXXXX-XXXXX-XXXXX
  IsFirstNodePlusELB: !And 
    - !Condition IsFirstNode
    - !Condition AddToELB
  AddAcAnswer: !And 
    - !Condition KeyProvided
    - !Condition PPUNotSelected
  InternetFacingELB: !Equals 
    - !Ref DSELBPosture
    - Internet-facing
  NetworkOnlyLicense: !Equals 
    - !Ref DSCLicenseType
    - Network
  RegionIsUsGovWest1: !Equals
    - !Ref 'AWS::Region'
    - us-gov-west-1
  UseProxy: !Not 
    - !Equals 
      - !Ref DSProxyUrl
      - ''
Outputs:
  DSMFQDN:
    Value: !GetAtt 
      - DSM
      - PublicDnsName
  DSMURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - DSM
          - PublicDnsName
        - ':'
        - !Ref DSIPGUIPort
  DSMInstanceId:
    Value: !Ref DSM
